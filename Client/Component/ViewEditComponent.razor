@using HotelManagment.Shared
@inject HttpClient Http

<!-- RoomInspectionComponent.razor -->
<tr>
    <td>@RoomInspection.RoomNumber</td>
    <td>@RoomInspection.InspectionDate</td>
    <td>@RoomInspection.Staff</td>
    <td>@RoomInspection.COnditions</td>
    <td>
        @if (RoomInspection.StartReperation != null)
        {
            <span style="color: forestgreen">Reparation Starts: at: @RoomInspection.StartReperation</span>
        }
        else
        {
            @RoomInspection.StartReperation
        }
    </td>
    <td><a href="TechnicalDetails/@RoomInspection.RoomInspectionID" class="btn btn-primary m-1">View</a></td>
    <td><a href="TechnicalDetailsAdmin/@RoomInspection.RoomInspectionID" class="btn btn-warning m-1">Edit</a></td>
    <td><a @onclick="Delete_Click" class="btn btn-danger m-1">Delete</a></td>
</tr>
<DeleteComponent @ref="DeleteConfirmation" ConfirmationChanged="ConfirmDelete_Click"
         ConfirmationMessage=@($"Are you sure you want to delete ")>
</DeleteComponent>

@code {
    [Parameter]
    public RoomInspection RoomInspection { get; set; }
    [Parameter]
    public EventCallback<int> OnEmployeeDeleted { get; set; }
    protected async Task Delete_Click()
    {
        DeleteConfirmation.Show();
       

    }
    protected DeleteComponent DeleteConfirmation { get; set; }
  

    protected async Task ConfirmDelete_Click(bool deleteConfirmed)
    {
        if (deleteConfirmed)
        {
            await Http.DeleteAsync($"/Administration/{RoomInspection.RoomInspectionID}");
            await OnEmployeeDeleted.InvokeAsync(RoomInspection.RoomInspectionID);
        }
    }
}
