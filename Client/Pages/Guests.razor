@page "/Guests"
@inject AuthenticationStateProvider _AuthenticationStateProvider
@inject HttpClient Http
@using HotelManagment.Shared
@using HotelManagment.Server.Models
@inject NavigationManager manager
<div style="width: 100%; background-color: @currentColor;border:1px solid black;height:50px">
   <h3 style="color:Red"> @MessageToUser</h3>
</div>
<div class="input-group mb-3">
    <input @bind="searchQuery" type="text" class="form-control" placeholder=" Enter Your Digital Signuture">
    <button class="btn btn-primary" @onclick="Search">Search</button>
</div>
<style>
    .container {
        display: flex;
    }

    .column {
        flex: 1; /* Each div takes equal space */
        border: 1px solid black;
        padding: 10px;
        margin: 0 5px; /* Adjust margin as needed */
    }

    .box1 {
        display: flex;
        align-items: center; /* Center vertically */
        justify-content: center; /* Center horizontally */
        background-color: yellow;
        width: 15%;
        border: solid 2px red;
        margin: 0 5px; /* Adjust margin as needed */
    }

    .box1 p {
        margin-top: 10px; /* Adjust the top margin to move the text downwards */
    }
</style>
@if (showdata)
{
    <div class="container">
        <div class="column">
            <p><strong>Room ID:</strong> @reservation.RoomID</p>
        </div>
        <div class="column">
            <p><strong>Email:</strong> @reservation.Email</p>
        </div>
        <div class="column">
            <p><strong>Name:</strong> @reservation.FirstName</p>
        </div>
        <div class="column">
            <p><strong>Digital Signature:</strong> @reservation.DigitalSignuture</p>
        </div>
    </div><br>
    <div style="width:100%;border:solid 1px black"><br>
    <center><h5><b>Your Ticked Included Service</b></h5></center></div>
    <br>
    <br>
    <div class="container">

        <div class="box1" @onclick="@(() => RedirectToPage("Parking"))" onmouseover="this.style.backgroundColor='lightgreen';" onmouseout="this.style.backgroundColor='yellow';">
           <p>Parking</p>
        </div>
        <div class="box1" @onclick="@(() => RedirectToPage("Gym"))" onmouseover="this.style.backgroundColor='lightgreen';" onmouseout="this.style.backgroundColor='yellow';">
            <p>Gym</p>
        </div>
        <div class="box1" @onclick="@(() => RedirectToPage("Swim Pool"))" onmouseover="this.style.backgroundColor='lightgreen';" onmouseout="this.style.backgroundColor='yellow';">
            <p>Swim</p>
        </div>
        <div class="box1" @onclick="@(() => RedirectToPage("Billiard"))" onmouseover="this.style.backgroundColor='lightgreen';" onmouseout="this.style.backgroundColor='yellow';">
            <p>Billiard</p>
        </div>
        <div class="box1" @onclick="@(() => RedirectToPage("Meeting Room"))" onmouseover="this.style.backgroundColor='lightgreen';" onmouseout="this.style.backgroundColor='yellow';">
            <p>Book Meeting Room</p>
        </div>
    </div>
    <hr />
    <h5>Send Message To Administration </h5>
    <EditForm Model="@sendMessage" OnValidSubmit="@HandleValidSubmit2">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-floating mb-3">
            <InputText @bind-Value="sendMessage.MessageTitle" id="email" class="form-control" placeholder="name@example.com" />
            <label for="email">Message Title </label>

        </div>
        <div class="form-floating mb-3">
            <InputText @bind-Value="sendMessage.Message" id="email" class="form-control" placeholder="name@example.com" />
            <label for="email">Your Message  </label>

        </div>
 
      

        <button type="submit" class="w-100 btn btn-lg btn-danger">Send Message To Admin</button>

    </EditForm>


}
@code {
    private string searchQuery;
    private string searchResult;
    private string currentColor = "white";
    public string MessageToUser { get; set; }
    public string user2 { get; set; }
    public Reservation reservation { get; set; } = new Reservation();
    public bool showdata { get; set; } = false;
    public SendMessage sendMessage { get; set; } = new SendMessage();
    private void RedirectToPage(string url)
    {
        manager.NavigateTo(url);
    }
    public async Task Search()
    {
        reservation = await Http.GetFromJsonAsync<Reservation>($"Administration/GetReservationByTickeet/{searchQuery}");
        showdata = true;

    }
    protected override async Task OnInitializedAsync()
    {
        // Check if the user is logged in and fetch their information
        var authState = await _AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        if (user.Identity?.IsAuthenticated ?? false)
        {
            user2 = user.FindFirst(c => c.Type == "sub")?.Value;

        }
    }
    public async Task HandleValidSubmit2()
    {
        SendMessage mess = new SendMessage
            {
                Message = sendMessage.Message,
                roomNumber = reservation.RoomID,
                MessageTitle = sendMessage.MessageTitle
            };
        await Http.PostAsJsonAsync<SendMessage>("/SendMessage/SendMessaget", mess);
        ChangeColor();
        sendMessage = new SendMessage();
        MessageToUser = "Your Message Sent To Administration";
        EmailRequest request = new EmailRequest();
        {
            request.Email = reservation.Email;
            request.HtmlMessage = $" A Copy Of Your Email To Administration :{mess.Message} ";
            request.Subject = mess.MessageTitle;
        };

        var x = await Http.PostAsJsonAsync("/Reservation/Email", request);

    }
    private void ChangeColor()
    {
        currentColor = "lightgreen";
    }
    
}

